<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            color: #343a40;
        }

        .navbar {
            background-color: #2c3e50;
        }

        .navbar-brand img {
            height: 40px;
            width: auto;
        }

        .card {
            background-color: #ffffff;
            border: none;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background-color: #3498db;
            border: none;
        }

        .btn-primary:hover {
            background-color: #2980b9;
        }

        .btn-warning {
            background-color: #f39c12;
            border: none;
        }

        .btn-warning:hover {
            background-color: #e67e22;
        }

        .btn-danger {
            background-color: #e74c3c;
            border: none;
        }

        .btn-danger:hover {
            background-color: #c0392b;
        }

        table thead {
            background-color: #2c3e50;
            color: #ffffff;
        }

        /* New Animation Styles */
        .fade-out {
            animation: fadeOut 0.5s ease-out forwards;
        }

        @keyframes fadeOut {
            from {
                opacity: 1;
                transform: translateX(0);
            }
            to {
                opacity: 0;
                transform: translateX(-20px);
            }
        }

        .scenario-checkbox {
            width: 18px;
            height: 18px;
            cursor: pointer;
        }

        .batch-actions {
            display: none;
            padding: 10px;
            background: #fff;
            border-radius: 8px;
            margin-bottom: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .batch-actions.visible {
            display: block;
            animation: slideDown 0.3s ease-out;
        }

        @keyframes slideDown {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <img src="https://via.placeholder.com/150x40.png?text=Logo" alt="Logo">
                Admin Dashboard
            </a>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="text-center mb-4">Admin Roleplay Dashboard</h1>
        <!-- Create New Button -->
        <div class="text-center mb-4">
            <button id="create-new-btn" class="btn btn-primary">Create New</button>
        </div>

        <!-- Roleplay Form -->
        <div class="card shadow p-4" id="form-container" style="display: none;">
            <form id="roleplay-form">
                <div class="mb-3">
                    <label for="scenario" class="form-label">Scenario</label>
                    <input type="text" id="scenario" class="form-control" placeholder="Enter scenario" required>
                </div>
                <div class="mb-3">
                    <label for="prompt" class="form-label">Prompt</label>
                    <input type="text" id="prompt" class="form-control" placeholder="Enter prompt" required>
                </div>
                <div class="mb-3">
                    <label for="question" class="form-label">Question</label>
                    <input type="text" id="question" class="form-control" placeholder="Enter question" required>
                </div>
                <button type="submit" class="btn btn-primary w-100">Create Roleplay</button>
            </form>
        </div>

        <!-- Delete Confirmation Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p id="deleteModalText">Are you sure you want to delete this scenario?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Roleplay History Section -->
        <h2 class="text-center mt-5">Roleplay History</h2>
        
        <!-- Batch Actions Bar -->
        <div class="batch-actions" id="batchActionsBar">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span id="selectedCount">0 items selected</span>
                </div>
                <div>
                    <button class="btn btn-danger btn-sm" onclick="showBatchDeleteModal()">
                        Delete Selected
                    </button>
                </div>
            </div>
        </div>

        <!-- History Table -->
        <table class="table table-bordered mt-3">
            <thead>
                <tr>
                    <th>
                        <input type="checkbox" class="scenario-checkbox" id="selectAll">
                    </th>
                    <th>Scenario</th>
                    <th>Prompt</th>
                    <th>Question</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="history-table-body"></tbody>
        </table>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        let deleteModal;
        let scenarioToDelete = null;
        let selectedScenarios = new Set();

        document.addEventListener('DOMContentLoaded', function () {
            deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const createNewBtn = document.getElementById('create-new-btn');
            const formContainer = document.getElementById('form-container');
            
            // Select All checkbox functionality
            document.getElementById('selectAll').addEventListener('change', function(e) {
                const checkboxes = document.querySelectorAll('.scenario-checkbox');
                checkboxes.forEach(checkbox => {
                    if (checkbox !== this) {
                        checkbox.checked = this.checked;
                        handleCheckboxChange(checkbox);
                    }
                });
            });

            // Toggle form visibility
            createNewBtn.addEventListener('click', function () {
                formContainer.style.display = formContainer.style.display === 'block' ? 'none' : 'block';
            });

            // Submit form to create roleplay
            document.getElementById('roleplay-form').addEventListener('submit', function (e) {
                e.preventDefault();
                const scenario = document.getElementById('scenario').value;
                const prompt = document.getElementById('prompt').value;
                const question = document.getElementById('question').value;
                
                fetch('/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ scenario, prompt, question })
                }).then(response => response.json()).then(data => {
                    alert(data.message);
                    loadHistory();
                    document.getElementById('roleplay-form').reset();
                    formContainer.style.display = 'none';
                });
            });

            loadHistory();
        });

        function handleCheckboxChange(checkbox) {
            const scenarioId = checkbox.getAttribute('data-id');
            if (checkbox.checked) {
                selectedScenarios.add(scenarioId);
            } else {
                selectedScenarios.delete(scenarioId);
            }
            updateBatchActionsBar();
        }

        function updateBatchActionsBar() {
            const batchBar = document.getElementById('batchActionsBar');
            const selectedCount = document.getElementById('selectedCount');
            
            if (selectedScenarios.size > 0) {
                selectedCount.textContent = `${selectedScenarios.size} item${selectedScenarios.size === 1 ? '' : 's'} selected`;
                batchBar.classList.add('visible');
            } else {
                batchBar.classList.remove('visible');
            }
        }

        function loadHistory() {
            fetch('/history')
                .then(response => response.json())
                .then(data => {
                    const historyTableBody = document.getElementById('history-table-body');
                    historyTableBody.innerHTML = '';
                    data.forEach(item => {
                        const row = document.createElement('tr');
                        row.setAttribute('data-id', item._id);
                        row.innerHTML = `
                            <td>
                                <input type="checkbox" class="scenario-checkbox" data-id="${item._id}">
                            </td>
                            <td>${item.scenario}</td>
                            <td>${item.prompt}</td>
                            <td>${item.question}</td>
                            <td>
                                <button class="btn btn-warning btn-sm me-2">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="showDeleteModal('${item._id}')">
                                    Delete
                                </button>
                            </td>
                        `;
                        historyTableBody.appendChild(row);
                    });

                    // Add checkbox event listeners
                    document.querySelectorAll('.scenario-checkbox').forEach(checkbox => {
                        checkbox.addEventListener('change', () => handleCheckboxChange(checkbox));
                    });
                });
        }

        function showDeleteModal(id) {
            scenarioToDelete = id;
            document.getElementById('deleteModalText').textContent = 'Are you sure you want to delete this scenario?';
            document.getElementById('confirmDelete').onclick = () => deleteScenario(id);
            deleteModal.show();
        }

        function showBatchDeleteModal() {
            scenarioToDelete = null;
            document.getElementById('deleteModalText').textContent = 
                `Are you sure you want to delete ${selectedScenarios.size} selected scenario${selectedScenarios.size === 1 ? '' : 's'}?`;
            document.getElementById('confirmDelete').onclick = deleteBatchScenarios;
            deleteModal.show();
        }

        function deleteScenario(scenarioId) {
            const row = document.querySelector(`tr[data-id="${scenarioId}"]`);
            row.classList.add('fade-out');

            setTimeout(() => {
                fetch(`/delete/${scenarioId}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        deleteModal.hide();
                        loadHistory();
                    } else {
                        alert('Error: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to delete scenario');
                });
            }, 500);
        }

        function deleteBatchScenarios() {
            const scenarioIds = Array.from(selectedScenarios);
            
            // Add fade-out animation to selected rows
            scenarioIds.forEach(id => {
                const row = document.querySelector(`tr[data-id="${id}"]`);
                row.classList.add('fade-out');
            });

            // Create promises for all delete operations
            const deletePromises = scenarioIds.map(id =>
                fetch(`/delete/${id}`, { method: 'DELETE' }).then(res => res.json())
            );

            setTimeout(() => {
                Promise.all(deletePromises)
                    .then(() => {
                        deleteModal.hide();
                        selectedScenarios.clear();
                        updateBatchActionsBar();
                        loadHistory();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Failed to delete some scenarios');
                    });
            }, 500);
        }
    </script>
</body>
</html>
